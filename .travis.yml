language: go

go:
- '1.9'

# Unconditionally place the repo at GOPATH/src/${go_import_path} to support
# forks.
go_import_path: github.com/m-lab/mlab-ns-rate-limit

cache:
  directories:
    - "$HOME/google-cloud-sdk/"

before_install:
# Coverage tools
- go get github.com/mattn/goveralls
- go get github.com/wadey/gocovmerge

# Install gcloud, for integration tests.
- $TRAVIS_BUILD_DIR/travis/install_gcloud.sh app-engine-python app-engine-go
- source "${HOME}/google-cloud-sdk/path.bash.inc"

# Install test credentials.
# All of the gcloud library calls will detect the GOOGLE_APPLICATION_CREDENTIALS
# environment variable, and use that file for authentication.
# If the application requires authentication outside the libraries, consider
# also using travis/activate_service_account.sh
# NOTE: We have added cross project permissions, allowing bigquery jobs against mlab-ns.
- if [[ -n "$SERVICE_ACCOUNT_mlab_testing" ]] ; then
  echo "$SERVICE_ACCOUNT_mlab_testing" > $TRAVIS_BUILD_DIR/creds.json ;
  export GOOGLE_APPLICATION_CREDENTIALS=$TRAVIS_BUILD_DIR/creds.json ;
  fi

before_script:
# Try removing boto config, recommended for datastore emulator.
# boto provides a python API for AWS, so it seems strange that this matters, but emulator
# doesn't work without this line.
- sudo rm -f /etc/boto.cfg

- gcloud components install beta
- gcloud components install cloud-datastore-emulator
- gcloud beta emulators datastore start --no-store-on-disk &
- sleep 2 # allow time for emulator to start up.
# This sets up the DATASTORE_ env vars.  For emulator (at least on travis), they look
# like localhost:8081..., or eco-emissary-NNNNN.
# NOTE: if you run emulator locally, you can unset with $(gcloud beta emulators datastore env-unset)
- gcloud beta emulators datastore env-init # So we can see values in travis log.
- $(gcloud beta emulators datastore env-init)

script:
# Run query "unit tests".
- go test -v ./... -bench=.

# Coveralls
#- $HOME/gopath/bin/gocovmerge bq.cov > merge.cov
#- $HOME/gopath/bin/goveralls -coverprofile=merge.cov -service=travis-ci

before_deploy:
# Terrible hack to get around travis substitution.
- export SUBST_TAGS=`echo "%TRAVIS_TAG, %TRAVIS_COMMIT, %PROJECT_ID, %BQ_PROJECT, %BQ_DATASET" | sed "s/%/$/g"`
- echo $SUBST_TAGS

deploy:
# Testing: deploy to mlab-sandbox for testing purpose.
- provider: script
  script:
    export PROJECT_ID="mlab-sandbox" &&
    export BQ_PROJECT="mlab-ns" &&
    export BQ_DATASET="exports" &&
    $TRAVIS_BUILD_DIR/travis/deploy_app.sh mlab-sandbox SERVICE_ACCOUNT_mlab_sandbox $TRAVIS_BUILD_DIR/appengine/rate_table
  skip_cleanup: true
  on:
    repo: m-lab/mlab-ns-rate-limit
    all_branches: true
    condition: $TRAVIS_BRANCH == sandbox-* && $TRAVIS_EVENT_TYPE == push

# Staging: deploy to mlab-staging.
- provider: script
  script:
    export PROJECT_ID="mlab-staging" &&
    export BQ_PROJECT="mlab-ns" &&
    export BQ_DATASET="exports" &&
    $TRAVIS_BUILD_DIR/travis/deploy_app.sh mlab-staging SERVICE_ACCOUNT_mlab_staging $TRAVIS_BUILD_DIR/appengine/rate_table
  skip_cleanup: true
  on:
    repo: m-lab/mlab-ns-rate-limit
    all_branches: true
    condition: $TRAVIS_BRANCH == master && $TRAVIS_EVENT_TYPE == push
